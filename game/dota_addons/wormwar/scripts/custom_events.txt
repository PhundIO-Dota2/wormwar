// No spaces in event names, max length 32
// All strings are case sensitive
//
// valid data key types are:
//   string : a zero terminated string
//   bool   : unsigned int, 1 bit
//   byte   : unsigned int, 8 bit
//   short  : signed int, 16 bit
//   long   : signed int, 32 bit
//   float  : float, 32 bit
//   uint64 : unsigned int 64 bit
//   local  : any data, but not networked to clients
//
// following key names are reserved:
//   local      : if set to 1, event is not networked to clients
//   unreliable : networked, but unreliable
//   suppress   : never fire this event
//   time	: firing server time
//   eventid	: holds the event ID

"CustomEvents"
{
    // Stat collection
    "stat_collection_part"
    {
        "data"          "string"
    }

    "stat_collection_send" { }

	"show_main_ability"
	{
		"pID"		"short"
	}

    "cgm_scoreboard_update_user"
    {
        "playerID"      "byte"
        "playerName"    "string"
    }

    "cgm_scoreboard_update_score"
    {
        "playerID"      "byte"
        "playerScore"    "long"
    }
    "turn_off_waitforplayers"
    {
    }
    "game_over_player_data"
    {
        "pID"      "byte"
        "playerName"    "string"
    }
    // Fired to tell clients who is considered the host
    "lh_hostid"
    {
        "hostID"       "byte"  // The ID of the player who is the host
    }
    "start_ending_cinematic"
    {
    }
    "change_segments_to_win"
    {
        "amount"    "short"
    }
    // highscore stuff
    "stat_collection_steamID" //Note this one event will power both StatsCollectionAchievments, StatsCollectionRPG aswell as StatsCollectionHighscores
    {
            "ids"                        "string"
    }
    "retrieve_highscore"    //Gets the highscore and shows the screen on startup
    {
    }
    "update_highscore"  //Sends any score, flash will compare to the stored highscore and update the screen & historic highscore
    {
        "player_ID"     "short"
        "score"         "long"
    }
}
